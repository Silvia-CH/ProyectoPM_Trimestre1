// Generated by view binder compiler. Do not edit!
package com.dam.pm_proyecto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dam.pm_proyecto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnVol;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView txtP1;

  @NonNull
  public final TextView txtP2;

  @NonNull
  public final ViewStub vsTablero;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnVol,
      @NonNull ConstraintLayout constraintLayout, @NonNull TextView txtP1, @NonNull TextView txtP2,
      @NonNull ViewStub vsTablero) {
    this.rootView = rootView;
    this.btnVol = btnVol;
    this.constraintLayout = constraintLayout;
    this.txtP1 = txtP1;
    this.txtP2 = txtP2;
    this.vsTablero = vsTablero;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnVol;
      ImageButton btnVol = ViewBindings.findChildViewById(rootView, id);
      if (btnVol == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.txtP1;
      TextView txtP1 = ViewBindings.findChildViewById(rootView, id);
      if (txtP1 == null) {
        break missingId;
      }

      id = R.id.txtP2;
      TextView txtP2 = ViewBindings.findChildViewById(rootView, id);
      if (txtP2 == null) {
        break missingId;
      }

      id = R.id.vsTablero;
      ViewStub vsTablero = ViewBindings.findChildViewById(rootView, id);
      if (vsTablero == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnVol, constraintLayout, txtP1,
          txtP2, vsTablero);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
